#!/bin/bash
set -e

# Logging
echo "üöÄ Starting ShopFlow Backend..."
echo "üìã Environment: ${NODE_ENV:-development}"
echo "üîß Port: ${API_PORT:-3333}"

# Verificar se o modelo YOLO existe
if [ ! -f "yolo11n.pt" ]; then
    echo "‚ö†Ô∏è YOLO model not found, downloading..."
    wget -q https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11n.pt || echo "‚ùå Failed to download YOLO model"
fi

# Criar diret√≥rios se n√£o existirem
mkdir -p logs uploads temp face_embeddings cache
chmod -R 777 logs uploads temp face_embeddings cache

# Limpar cache se solicitado
if [ "$CLEAR_CACHE_ON_STARTUP" = "true" ]; then
    echo "üßπ Clearing cache directories..."
    rm -rf cache/* temp/* || true
fi

# Configura√ß√µes de performance baseadas no ambiente
if [ "$NODE_ENV" = "production" ]; then
    echo "üè≠ Production mode: optimizing for performance..."
    export WORKERS=${WORKERS:-1}
    export WORKER_CONNECTIONS=${WORKER_CONNECTIONS:-1000}
else
    echo "üîß Development mode: optimizing for debugging..."
    export WORKERS=1
    export API_DEBUG=true
fi

# Log de configura√ß√µes importantes (sem secrets)
echo "üìã Configuration:"
echo "   API Host: ${API_HOST:-0.0.0.0}"
echo "   API Port: ${API_PORT:-3333}"
echo "   Workers: ${WORKERS:-1}"
echo "   Environment: ${NODE_ENV:-development}"
echo "   Debug Mode: ${API_DEBUG:-false}"
echo "   YOLO Confidence: ${YOLO_CONFIDENCE:-0.6}"
echo "   Git SHA: ${GIT_SHA:-unknown}"

# Health check interno antes de iniciar
echo "üîç Running pre-startup health check..."
python -c "
import sys
try:
    from core.config import settings
    print('‚úÖ Configuration loaded')
    
    # Verificar m√≥dulos cr√≠ticos
    import cv2
    print('‚úÖ OpenCV loaded')
    
    from ultralytics import YOLO
    print('‚úÖ YOLO loaded')
    
    from core.database import SupabaseManager
    print('‚úÖ Database module loaded')
    
    from core.ai.smart_analytics_engine import SmartAnalyticsEngine
    print('‚úÖ AI modules loaded')
    
    print('‚úÖ Pre-startup health check passed')
except Exception as e:
    print(f'‚ùå Pre-startup health check failed: {e}')
    sys.exit(1)
"

if [ $? -ne 0 ]; then
    echo "‚ùå Pre-startup health check failed! Exiting..."
    exit 1
fi

echo "‚úÖ All checks passed, starting server..."
echo "=================================="

# Executar comando principal
exec "$@"